@using System.Security.Claims
@using TownTalk.Models
@using TownTalk.ViewModels
@model PostsLandingViewModel;

@{
    ViewBag.Title = "Posts";
    int count = Model.Posts.Count();
    int start = (Model.CurrentPage - 1) * 20 + 1;
    int end = Model.CurrentPage*20;
    int total = Model.TotalPosts;
    string heading = Model.Posts.Count() > 0 ? " | " + start + " - " + end + " of " + total: "";
}

<div class="container mt-4">
    <h1>Posts</h1>

    <div class="container mt-3">
        <!-- Filters Group -->
        <form method="get" asp-action="Index">
            <div class="row">
                <div class="col-md-12">
                    <label for="q">Search</label>
                    <input type="text" id="q" name="q" value="@Model.Query"
                    placeholder="Search by title or content" />
                </div>
            </div>
            <div class="row align-items-center">
                <!-- Date Filter -->
                <div class="col-md-3">
                    <label for="dateFilter">Date</label>
                    <select id="dateFilter" name="at">
                        <option value="">All Dates</option>
                        @foreach (string date in Model.Filters.AvailableDates)
                        {
                            <option value="@date" selected="@(Model?.Date == date)">@date</option>
                        }
                    </select>
                </div>

                <!-- Author Filter -->
                <div class="col-md-3">
                    <label for="authorFilter">Author</label>
                    <select id="authorFilter" name="by">
                        <option value="">All Authors</option>
                        @foreach (ApplicationUser author in Model.Filters.Authors)
                        {
                            <option value="@author.DisplayName" selected="@(Model.Author == @author.DisplayName)">@author.DisplayName</option>
                        }
                    </select>
                </div>

                <!-- Category Filter -->
                <div class="col-md-3">
                    <label for="categoryFilter">Category</label>
                    <select id="categoryFilter" name="cl">
                        <option value="">All Categories</option>
                        @foreach (Category category in Model.Filters.Categories)
                        {
                            <option value="@category.Name" selected="@(Model.Category == category.Name)">@category.Name</option>
                        }
                    </select>
                </div>

                <div class="col-md-3 d-flex align-items-center">
                    <button class="btn-primary m-0 mt-3" type="submit">Apply filters</button>
                </div>
            </div>

        </form>
        <hr>

        @{
            await Html.RenderPartialAsync("_SearchResults", Model);
        }

    </div>


</div>

<script>
    function loadPosts(page) {
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set("page", page);

        const queryString = urlParams.toString();

        fetch(`/Posts/GetPosts?${queryString}`)
            .then(response => response.text())
            .then(data => {
                // Replace the PostList and Pagination parts with new content
                document.getElementById("resultsContainer").innerHTML = data;
            });
    }
</script>
